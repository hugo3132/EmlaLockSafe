/**
\mainpage EmlaLockSafe

Documentation for the software of the EmlaLockSafe.

<a href="https://github.com/hugo3132/EmlaLockSafe/blob/master/hardware/pictures/safe.png">
\image html https://raw.githubusercontent.com/hugo3132/EmlaLockSafe/master/hardware/pictures/safe.png height=300px
</a>

\tableofcontents



\section Overview
The EmlaLockSafe uses an ESP32 processor board to open the attached safe dependent on your session on <a href="https://www.emlalock.com">emlalock.com</a>.
The software running on the EPS32 is speparated into different parts which are described in the following sections.

The \ref secConfiguration "first section" covers the how the webservers are used to configure the software. The section \ref secLockstate shows how the 
software handles if it should open or not and what is shown on the display. The section \ref secEmlaLockApi shows how the software interacts with the API
of <a href="https://www.emlalock.com">emlalock.com</a>.

Except of the \ref subWifiConfigurationServer, everything what is displayed on the LCD is using \ref secViews. A view can be what's currently displayed, a
dialog or an menu. For the navigation within the views, the encoder nob can be used.

@warning If the filesystem in the flash memory (SPIFFS) is accessed the interrupts must be temorarily deactivated. The class @ref UsedInterrupts provides
an @ref UsedInterrupts::attach "attach" and @ref UsedInterrupts::detach "detach" function to temporarily deactivated the interrupts. An other option is
to use the function @ref UsedInterrupts::executeWithoutInterrupts "executeWithoutInterrupts" which accepts a lamda expression which is executed while the
interrupts are detached.



\section secConfiguration Configuration

The configuration is stored in the fields of the \ref configuration::Configuration class. It automatically loads and saves all parameters to the file 
/configuration.txt. The filesystem is located in an SPIFFS in the ESP32's flash memory.
To change the configuration two webservers are used. The first sever (see \ref subWifiConfigurationServer) is always started automatically when the WiFi 
credentials are not complete. The second server (see \ref subMainConfigurationServer) is automatically started if the EmlaLock API is not configured. 
Both servers can also be started using the \ref subPreferencesMenu.
The webservers are derived @ref configuration::ConfigurationServerBase. The base class provides the function
@ref configuration::ConfigurationServerBase::addSpiffsFileToServer "addSpiffsFileToServer()" which makes a file in the SPIFFS available on the webserver.
In addition, jquery and the main CSS file is added.


\subsection subWifiConfigurationServer WiFi Configuration Server
The server is started as soon as the WiFi SSID or password is empty in the \ref configuration::Configuration class. Since the WiFi credentials are not 
known, the ESP32 acts as access point with the SSID SafeSetup (see @ref configuration::WifiConfigurationServer::createAp "createAp()"). Additionally, a
DNS server is started which resolves any request to the IP address of the ESP32. This is necessary to implemented a captive portal which automatically 
forwards any client which connects to the WiFi to the configuration website. 
If the captive portal does not work, the necessary steps are also displayed on the LCD:

<a href=https://github.com/hugo3132/EmlaLockSafe/blob/master/hardware/pictures/WifiSetup.jpg>
\image html https://raw.githubusercontent.com/hugo3132/EmlaLockSafe/master/hardware/pictures/WifiSetup.jpg height=300px
</a>

The webserver (see @ref configuration::WifiConfigurationServer::configureWebserver "configureWebserver()") also provides a generated text-file with all
visible WiFi networks. The list is automatically updated in the configuration::WifiConfigurationServer::loop "loop()" function.

\subsection subMainConfigurationServer Main Configuration Server




\section secLockstate Lockstate



\section secEmlaLockApi EmlaLock API



\section secViews Views

\subsection subPreferencesMenu Preferences Menu
Only available when unlocked

*/



--> Based on views,
--> Views are global and can be accessed over the [ViewStore](https://github.com/hugo3132/EmlaLockSafe/blob/master/software/src/views/ViewStore.h)
--> Menus are a specialization of a view

--> Meaning unlock key [EmlalockUnlockKeyMenu](#EmlalockUnlockKeyMenu)

<img src="https://github.com/hugo3132/EmlaLockSafe/blob/master/software/EmlalockSafe.vpd.svg" width="100%">

## Example Views

### EmlalockUnlockKeyMenu
<img src="https://github.com/hugo3132/EmlaLockSafe/blob/master/hardware/pictures/EmlalockUnlockKeyMenu.png" width="50%">

### LockedView
<img src="https://github.com/hugo3132/EmlaLockSafe/blob/master/hardware/pictures/LockedView.png" width="100%">


## Manual mode
TBD


